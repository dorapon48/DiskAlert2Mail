services:
  chatgpt:
    container_name: "chatgpt"
    user: "${USER_NAME}"
    build:
      context: "."
      dockerfile: ./docker/chatgpt/dockerfile
      args:
        GID: "${GID}"
        UID: "${UID}"
        USER_NAME: "${USER_NAME}"
    ports:
      - 8001:8000
    volumes:
      - ./chatgpt:/app
    tty: true
  # detectron:
  #   container_name: "detectron"
  #   user: "${USER_NAME}"
  #   build:
  #     context: "."
  #     dockerfile: ./docker/detectron/dockerfile
  #     args:
  #       GID: "${GID}"
  #       UID: "${UID}"
  #       USER_NAME: "${USER_NAME}"
  #   ports:
  #     - 8000:8000
  #   volumes:
  #     - ./detectron:/app
  #   tty: true
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  main:
    container_name: "main"
    user: "${USER_NAME}"
    build:
      context: "."
      dockerfile: ./docker/main/dockerfile
      args:
        GID: "${GID}"
        UID: "${UID}"
        USER_NAME: "${USER_NAME}"
    ports:
      - 8002:8000
    volumes:
      - ./main:/app
    tty: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  flont:
    container_name: "flont"
    user: "${USER_NAME}"
    build:
      context: "."
      dockerfile: ./docker/flont/dockerfile
      args:
        GID: "${GID}"
        UID: "${UID}"
        USER_NAME: "${USER_NAME}"
    ports:
      - 8003:3000
    volumes:
      - ./flont:/app
      - node_modules:/app/node_modules
    tty: true
  
  tester:
    container_name: "tester"
    user: "${USER_NAME}"
    build:
      context: "."
      dockerfile: ./docker/tester/dockerfile
      args:
        GID: "${GID}"
        UID: "${UID}"
        USER_NAME: "${USER_NAME}"
    volumes:
      - ./tester:/app
      - ./images:/app/images
    tty: true

volumes:
  node_modules:

