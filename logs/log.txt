2024/09/27
ディスクの容量を監視し，規定の容量になったらメール通知するプログラムを作る

まずはコマンドを作ってみる
連想配列が使えるらしい
いろいろできますなぁ
コンフィグファイルの形式はINIファイル形式で
必要なものを考えてみる...

2025/02/19
ログのディレクトリ名を変更
パッケージの名前を変更

わざわざアプリにする必要はないので，shellで作ってcornで動かせばよさそう
思ったけどこれCで書いた方が早くない？
Cで書いてみる
インテリセンスが効かないので何とかしてみる
ubuntu上からvscodeを開いたら行けた
コンフィグはini形式で書く

構造は，diskAlert.h, sendMail.h, conf.h, diskAlert2Mail.cの4つでやる
diskAlert.hはコンフィグからアラートを出すか決定する．
sendMail.hは指定したメールアドレスにメールを送信する．
conf.hはコンフィグファイルの読み込みを行い，使いやすくする
diskAlert2Mail.cは以上の統合

まず，conf.h
modeはいらん

.cを複数作ってどうやって使うのかと思っていたが，まとめてコンパイルできるのね
C++の方がよくないですか？
C++にしましょう

次回はC++で書くところから

2025/02/20
C++で書く

まず，dmniparserを書く
とりあえず読み込めるようになった．
名前を変更 dminiparser.cpp -> dmini.cpp
正しい値が入っているか確認する関数を追加...ok

2025/02/21
C++のヘッダーファイル等で分けて書いてみる．

getterその他もろもろが長くなりすぎる
configを返してくれれば使いやすいのでそれを返すだけのクラスにした方がいいかも
ヘッダーをconfigで分けて見る...ok
次は読み取りをできるだけ簡素化する
const std::string& strこれは，文字列をコピーしてしまうのを防ぐ意味があるらしい

2025/02/23
setconfigをわかりやすくした
入力規則をいろいろ定めたいが，今は完成を先にする
設定ファイルの読み取りはできたので，次はsendmail.cpp
Gmailなどを利用してメール送信はできるらしいが，自分で構築する？
自分で構築するのは独自ドメインが必要らしいので却下，
gmailを作成して自分で送ってみる
いろいろ見てみたけど，dockerで動かすこと前提みたいなのがあるので，dockerで作ることにしてみる
となると，pythonやnodeがよさそうに見える

次回，docker出現，デュエルスタンバイ！

2025/02/24
dockerで構築するぞ
ini以外で使いやすい設定ファイルがないか探す
tomlで書いてみよう
python, dockerの初期設定完了
pythonでtomlを読み込む
なんかエラーすると思ったら，python d2m.tomlとかしてた，馬鹿がよ
安全そうな方法を探してみる
docker compose のroでマウントすると読み込み専用になって安全そう
一応できているっポイが，ちゃんと情報が取れているか不明なので，サーバーで試してみる
できているっぽいが，出力がおかしいみたいなので修正すること
開発用と本番用のdockerファイルを分けてみる
別の方法がないかと思ったが，結局ファイルを分けた方が簡単ですね
devとprodを分けた

docker compose -f docker-compose.prod.yml build
docker compose -f docker-compose.prod.yml up
で本番用が立ち上がる

設定ファイルの読み取りと正しいかを判定する
pydanticのスキーマ判定でやる
pydanticで大体の判定ができそうね
いいね，バリデーションの設定が簡単になった．
次は，型とかその辺を分離する...ok
次回は，メール送信部分から

2025/02/25
メール
d2m.tomlは無視しておく
なぜかgitignoreが効かない -> キャッシュが残ってるせいらしい
動作周期があった方がよさそうなので追加
sendGridでやってみる
sendGrid個人で使えないわ
gmailアカウントを作成してやりましょう...ok
アプリパスワードを設定
toml.exampleにsmtp等を追加
メールのテスト送信ができた
send_mail.py構築...ok
ちょっと様子がおかしいな
globalconfigの中にメールのコンフィグがあるのはおかしいかも
かえる，変えた

2025/02/26
判定部分を作る

modelにdiskの判定に使用するクラスを追加
dfがrootをスラッシュ抜きで表示するのでmountPathを空っぽにして例外処理
checkはdfの取得と判定部分で分ける
ファイル分けすぎな気がする
model, sendmail以外全部mainに書いてもいい
get_dfは分ける

Disk Alert To Mail
以下のディスクの容量が設定された制限を下回りました．

ディスク名: test disk
マウント先: /test/test
使用率　　: 80%
残り容量　: 50G

ディスク名: test disk
マウント先: /test/test
使用率　　: 80%
残り容量　: 50G

